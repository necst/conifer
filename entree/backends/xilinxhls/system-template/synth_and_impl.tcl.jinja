################################################################
# COMMAND-LINE ARGUMENTS
################################################################
set prj_root  [lindex $argv 0]
set prj_dir [lindex $argv 1]
set ip_dir [lindex $argv 2]
set prj_name {{projectname}}_system
set prj_part {{XilinxPart}}
set prj_board {{XilinxBoard}}
set sample_length {{num1}}
set n_classes {{class_count}}
set n_trees_per_class {{TreesPerClass}}
set result_lenght {{num2}}
set output_length {{num3}}
set n_banks {{bank_count}}
set n_trees_per_bank {{TreesPerBank}}
set id_length {{num4}}
# TODO: add n_jobs variable


# generate output products for every element in the design
generate_target all [get_files  ${prj_dir}/${prj_root}.srcs/sources_1/bd/top_system/top_system.bd]
export_ip_user_files -of_objects [get_files ${prj_dir}/${prj_root}.srcs/sources_1/bd/top_system/top_system.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] ${prj_dir}/${prj_root}.srcs/sources_1/bd/top_system/top_system.bd]
launch_runs top_system_* -jobs ${n_jobs}


# DFX wizard: set configurations and configuration runs
{%- set ns=namespace() %}
{%- set ns.config = 0 %}
{%- set ns.counter = 0 %}
{%- for i in iter_cfgs %}
    {%- if ns.counter==0 %}
        {%- set ns.newline='create_pr_configuration -name config_%d -partitions [list '|format( ns.config + 1 )%}
    {%- endif %}
            {%- set ns.newline='%stop_system_i/%s:%s_inst_0 '|format(ns.newline,set_properties[ns.counter]['rp'],set_properties[ns.counter]['rm'][ns.config])%}
    {%- if ns.counter==n_trees-1 %}
        {%- set ns.newline='%s]'|format(ns.newline)%}
{{ns.newline}}
        {%- set ns.config = ns.config + 1%}
        {%- set ns.counter=0%}
    {%- else %}
        {%- set ns.counter = ns.counter + 1 %}
    {%- endif %}
{%- endfor %}

{%- set ns.counter = 0 %}
{%- for i in iter_runs %}
    {%- if ns.counter==0 %}
        {%- set ns.newline='set_property PR_CONFIGURATION config_1 [get_runs impl_1]'%}
    {%- else %}
        {%- set ns.newline='create_run child_%d_impl_1 -parent_run impl_1 -flow {Vivado Implementation 2021} -pr_config config_%d'|format(ns.counter - 1, ns.counter + 1)%}
    {%- endif %}
    {%- set ns.counter = ns.counter + 1 %}
{{ns.newline}}
{%- endfor %}

# launch synthesis
launch_runs synth_1 -jobs 12
wait_on_run synth_1



# TODO: try to find out how to use cnstraint files instead of tcl commands to do floorplanning
open_run synth_1 -name synth_1 -pr_config [current_pr_configuration]

startgroup
create_pblock pblock_tree_rp_0_0
resize_pblock pblock_tree_rp_0_0 -add SLICE_X5Y60:SLICE_X8Y119
add_cells_to_pblock pblock_tree_rp_0_0 [get_cells [list top_system_i/tree_rp_0_0]] -clear_locs
endgroup
startgroup
create_pblock pblock_tree_rp_0_1
resize_pblock pblock_tree_rp_0_1 -add SLICE_X9Y60:SLICE_X12Y119
add_cells_to_pblock pblock_tree_rp_0_1 [get_cells [list top_system_i/tree_rp_0_1]] -clear_locs
endgroup
startgroup
create_pblock pblock_tree_rp_0_2
resize_pblock pblock_tree_rp_0_2 -add SLICE_X22Y60:SLICE_X25Y119
add_cells_to_pblock pblock_tree_rp_0_2 [get_cells [list top_system_i/tree_rp_0_2]] -clear_locs
endgroup

file mkdir /home/users/matteo.santelmo/Desktop/TEST/TEST_entree_2/iris_PDR_Vivado_GB_system/iris_PDR_Vivado_GB_system.srcs/constrs_1/new
close [ open /home/users/matteo.santelmo/Desktop/TEST/TEST_entree_2/iris_PDR_Vivado_GB_system/iris_PDR_Vivado_GB_system.srcs/constrs_1/new/pblocks.xdc w ]
add_files -fileset constrs_1 /home/users/matteo.santelmo/Desktop/TEST/TEST_entree_2/iris_PDR_Vivado_GB_system/iris_PDR_Vivado_GB_system.srcs/constrs_1/new/pblocks.xdc
set_property target_constrs_file /home/users/matteo.santelmo/Desktop/TEST/TEST_entree_2/iris_PDR_Vivado_GB_system/iris_PDR_Vivado_GB_system.srcs/constrs_1/new/pblocks.xdc [current_fileset -constrset]
save_constraints -force